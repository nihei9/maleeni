// Code generated by {{ .GeneratorName }}; DO NOT EDIT.

package compiler

import "github.com/nihei9/maleeni/ucd"

// https://www.unicode.org/reports/tr44/#GC_Values_Table
var compositGeneralCategories = map[string][]string{
	// Cased_Letter
	"lc": {"lu", "ll", "lt"},
	// Letter
	"l": {"lu", "ll", "lt", "lm", "lo"},
	// Mark
	"m": {"mm", "mc", "me"},
	// Number
	"n": {"nd", "nl", "no"},
	// Punctuation
	"p": {"pc", "pd", "ps", "pi", "pe", "pf", "po"},
	// Symbol
	"s": {"sm", "sc", "sk", "so"},
	// Separator
	"z": {"zs", "zl", "zp"},
	// Other
	"c": {"cc", "cf", "cs", "co", "cn"},
}

// https://www.unicode.org/Public/13.0.0/ucd/PropertyAliases.txt
var propertyNameAbbs = map[string]string{
    "generalcategory": "gc",
    "gc": "gc",
	"whitespace": "wspace",
	"wspace": "wspace",
	"space": "wspace",
}

// https://www.unicode.org/reports/tr44/#Type_Key_Table
// https://www.unicode.org/reports/tr44/#Binary_Values_Table
var binaryValues = map[string]bool{
	"yes": true,
	"y": true,
	"true": true,
	"t": true,
	"no": false,
	"n": false,
	"false": false,
	"f": false,
}

// https://www.unicode.org/Public/13.0.0/ucd/PropertyValueAliases.txt
var generalCategoryValueAbbs = map[string]string{ {{ range $long, $abb := .PropertyValueAliases.GeneralCategory }}
    "{{ $long }}": "{{ $abb }}",{{ end }}
}

// https://www.unicode.org/Public/13.0.0/ucd/UnicodeData.txt
var generalCategoryCodePoints = map[string][]*ucd.CodePointRange{ {{ range $propName, $codePoints := .UnicodeData.GeneralCategory }}
	"{{ $propName }}": { {{ range $codePoints }}
	   &ucd.CodePointRange{From: rune({{ .From }}), To: rune({{ .To }})},{{ end }}
	},{{ end }}
}

// https://www.unicode.org/Public/13.0.0/ucd/PropList.txt
var whiteSpaceCodePoints = []*ucd.CodePointRange{ {{ range .PropList.WhiteSpace }}
    &ucd.CodePointRange{From: rune({{ .From }}), To: rune({{ .To }})},{{ end }}
}
